/**
 * This class is generated by jOOQ
 */
package com.cf.public_.tables;


import com.cf.public_.Keys;
import com.cf.public_.Public;
import com.cf.public_.tables.records.QsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Qs extends TableImpl<QsRecord> {

    private static final long serialVersionUID = -1458803882;

    /**
     * The reference instance of <code>public.qs</code>
     */
    public static final Qs QS = new Qs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QsRecord> getRecordType() {
        return QsRecord.class;
    }

    /**
     * The column <code>public.qs.id</code>.
     */
    public final TableField<QsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.qs.rating</code>.
     */
    public final TableField<QsRecord, Integer> RATING = createField("rating", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.qs</code> table reference
     */
    public Qs() {
        this("qs", null);
    }

    /**
     * Create an aliased <code>public.qs</code> table reference
     */
    public Qs(String alias) {
        this(alias, QS);
    }

    private Qs(String alias, Table<QsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Qs(String alias, Table<QsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QsRecord, ?>>asList(Keys.QS__QS_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Qs as(String alias) {
        return new Qs(alias, this);
    }

    /**
     * Rename this table
     */
    public Qs rename(String name) {
        return new Qs(name, null);
    }
}
