/*
 * This file is generated by jOOQ.
*/
package com.cf.performance_schema.tables;


import com.cf.performance_schema.PerformanceSchema;
import com.cf.performance_schema.enums.ReplicationApplierStatusByWorkerServiceState;
import com.cf.performance_schema.tables.records.ReplicationApplierStatusByWorkerRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationApplierStatusByWorker extends TableImpl<ReplicationApplierStatusByWorkerRecord> {

    private static final long serialVersionUID = 810801318;

    /**
     * The reference instance of <code>performance_schema.replication_applier_status_by_worker</code>
     */
    public static final ReplicationApplierStatusByWorker REPLICATION_APPLIER_STATUS_BY_WORKER = new ReplicationApplierStatusByWorker();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReplicationApplierStatusByWorkerRecord> getRecordType() {
        return ReplicationApplierStatusByWorkerRecord.class;
    }

    /**
     * The column <code>performance_schema.replication_applier_status_by_worker.CHANNEL_NAME</code>.
     */
    public final TableField<ReplicationApplierStatusByWorkerRecord, String> CHANNEL_NAME = createField("CHANNEL_NAME", org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_status_by_worker.WORKER_ID</code>.
     */
    public final TableField<ReplicationApplierStatusByWorkerRecord, ULong> WORKER_ID = createField("WORKER_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_status_by_worker.THREAD_ID</code>.
     */
    public final TableField<ReplicationApplierStatusByWorkerRecord, ULong> THREAD_ID = createField("THREAD_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.replication_applier_status_by_worker.SERVICE_STATE</code>.
     */
    public final TableField<ReplicationApplierStatusByWorkerRecord, ReplicationApplierStatusByWorkerServiceState> SERVICE_STATE = createField("SERVICE_STATE", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false).asEnumDataType(com.cf.performance_schema.enums.ReplicationApplierStatusByWorkerServiceState.class), this, "");

    /**
     * The column <code>performance_schema.replication_applier_status_by_worker.LAST_SEEN_TRANSACTION</code>.
     */
    public final TableField<ReplicationApplierStatusByWorkerRecord, String> LAST_SEEN_TRANSACTION = createField("LAST_SEEN_TRANSACTION", org.jooq.impl.SQLDataType.CHAR(57).nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_status_by_worker.LAST_ERROR_NUMBER</code>.
     */
    public final TableField<ReplicationApplierStatusByWorkerRecord, Integer> LAST_ERROR_NUMBER = createField("LAST_ERROR_NUMBER", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_status_by_worker.LAST_ERROR_MESSAGE</code>.
     */
    public final TableField<ReplicationApplierStatusByWorkerRecord, String> LAST_ERROR_MESSAGE = createField("LAST_ERROR_MESSAGE", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_status_by_worker.LAST_ERROR_TIMESTAMP</code>.
     */
    public final TableField<ReplicationApplierStatusByWorkerRecord, Timestamp> LAST_ERROR_TIMESTAMP = createField("LAST_ERROR_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>performance_schema.replication_applier_status_by_worker</code> table reference
     */
    public ReplicationApplierStatusByWorker() {
        this(DSL.name("replication_applier_status_by_worker"), null);
    }

    /**
     * Create an aliased <code>performance_schema.replication_applier_status_by_worker</code> table reference
     */
    public ReplicationApplierStatusByWorker(String alias) {
        this(DSL.name(alias), REPLICATION_APPLIER_STATUS_BY_WORKER);
    }

    /**
     * Create an aliased <code>performance_schema.replication_applier_status_by_worker</code> table reference
     */
    public ReplicationApplierStatusByWorker(Name alias) {
        this(alias, REPLICATION_APPLIER_STATUS_BY_WORKER);
    }

    private ReplicationApplierStatusByWorker(Name alias, Table<ReplicationApplierStatusByWorkerRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReplicationApplierStatusByWorker(Name alias, Table<ReplicationApplierStatusByWorkerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByWorker as(String alias) {
        return new ReplicationApplierStatusByWorker(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByWorker as(Name alias) {
        return new ReplicationApplierStatusByWorker(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReplicationApplierStatusByWorker rename(String name) {
        return new ReplicationApplierStatusByWorker(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReplicationApplierStatusByWorker rename(Name name) {
        return new ReplicationApplierStatusByWorker(name, null);
    }
}
