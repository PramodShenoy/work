/**
 * This class is generated by jOOQ
 */
package com.cf.pg_catalog.routines;


import com.cf.pg_catalog.PgCatalog;

import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TsDebug1 extends AbstractRoutine<Void> {

    private static final long serialVersionUID = -1900556522;

    /**
     * The parameter <code>pg_catalog.ts_debug.config</code>.
     */
    public static final Parameter<Object> CONFIG = createParameter("config", org.jooq.impl.DefaultDataType.getDefaultDataType("regconfig"), false, false);

    /**
     * The parameter <code>pg_catalog.ts_debug.document</code>.
     */
    public static final Parameter<String> DOCUMENT = createParameter("document", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>pg_catalog.ts_debug.alias</code>.
     */
    public static final Parameter<String> ALIAS = createParameter("alias", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>pg_catalog.ts_debug.description</code>.
     */
    public static final Parameter<String> DESCRIPTION = createParameter("description", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>pg_catalog.ts_debug.token</code>.
     */
    public static final Parameter<String> TOKEN = createParameter("token", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>pg_catalog.ts_debug.dictionaries</code>.
     */
    public static final Parameter<Object[]> DICTIONARIES = createParameter("dictionaries", org.jooq.impl.DefaultDataType.getDefaultDataType("regdictionary").getArrayDataType(), false, false);

    /**
     * The parameter <code>pg_catalog.ts_debug.dictionary</code>.
     */
    public static final Parameter<Object> DICTIONARY = createParameter("dictionary", org.jooq.impl.DefaultDataType.getDefaultDataType("regdictionary"), false, false);

    /**
     * The parameter <code>pg_catalog.ts_debug.lexemes</code>.
     */
    public static final Parameter<String[]> LEXEMES = createParameter("lexemes", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), false, false);

    /**
     * Create a new routine call instance
     */
    public TsDebug1() {
        super("ts_debug", PgCatalog.PG_CATALOG);

        addInParameter(CONFIG);
        addInParameter(DOCUMENT);
        addOutParameter(ALIAS);
        addOutParameter(DESCRIPTION);
        addOutParameter(TOKEN);
        addOutParameter(DICTIONARIES);
        addOutParameter(DICTIONARY);
        addOutParameter(LEXEMES);
        setOverloaded(true);
    }

    /**
     * Set the <code>config</code> parameter IN value to the routine
     */
    public void setConfig(Object value) {
        setValue(CONFIG, value);
    }

    /**
     * Set the <code>document</code> parameter IN value to the routine
     */
    public void setDocument(String value) {
        setValue(DOCUMENT, value);
    }

    /**
     * Get the <code>alias</code> parameter OUT value from the routine
     */
    public String getAlias() {
        return get(ALIAS);
    }

    /**
     * Get the <code>description</code> parameter OUT value from the routine
     */
    public String getDescription() {
        return get(DESCRIPTION);
    }

    /**
     * Get the <code>token</code> parameter OUT value from the routine
     */
    public String getToken() {
        return get(TOKEN);
    }

    /**
     * Get the <code>dictionaries</code> parameter OUT value from the routine
     */
    public Object[] getDictionaries() {
        return get(DICTIONARIES);
    }

    /**
     * Get the <code>dictionary</code> parameter OUT value from the routine
     */
    public Object getDictionary() {
        return get(DICTIONARY);
    }

    /**
     * Get the <code>lexemes</code> parameter OUT value from the routine
     */
    public String[] getLexemes() {
        return get(LEXEMES);
    }
}
