/**
 * This class is generated by jOOQ
 */
package com.cf.pg_catalog.routines;


import com.cf.pg_catalog.PgCatalog;

import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgLockStatus extends AbstractRoutine<Void> {

    private static final long serialVersionUID = 946742315;

    /**
     * The parameter <code>pg_catalog.pg_lock_status.locktype</code>.
     */
    public static final Parameter<String> LOCKTYPE = createParameter("locktype", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.database</code>.
     */
    public static final Parameter<Long> DATABASE = createParameter("database", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.relation</code>.
     */
    public static final Parameter<Long> RELATION = createParameter("relation", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.page</code>.
     */
    public static final Parameter<Integer> PAGE = createParameter("page", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.tuple</code>.
     */
    public static final Parameter<Short> TUPLE = createParameter("tuple", org.jooq.impl.SQLDataType.SMALLINT, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.virtualxid</code>.
     */
    public static final Parameter<String> VIRTUALXID = createParameter("virtualxid", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.transactionid</code>.
     */
    public static final Parameter<Long> TRANSACTIONID = createParameter("transactionid", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.classid</code>.
     */
    public static final Parameter<Long> CLASSID = createParameter("classid", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.objid</code>.
     */
    public static final Parameter<Long> OBJID = createParameter("objid", org.jooq.impl.SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.objsubid</code>.
     */
    public static final Parameter<Short> OBJSUBID = createParameter("objsubid", org.jooq.impl.SQLDataType.SMALLINT, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.virtualtransaction</code>.
     */
    public static final Parameter<String> VIRTUALTRANSACTION = createParameter("virtualtransaction", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.pid</code>.
     */
    public static final Parameter<Integer> PID = createParameter("pid", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.mode</code>.
     */
    public static final Parameter<String> MODE = createParameter("mode", org.jooq.impl.SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.granted</code>.
     */
    public static final Parameter<Boolean> GRANTED = createParameter("granted", org.jooq.impl.SQLDataType.BOOLEAN, false, false);

    /**
     * The parameter <code>pg_catalog.pg_lock_status.fastpath</code>.
     */
    public static final Parameter<Boolean> FASTPATH = createParameter("fastpath", org.jooq.impl.SQLDataType.BOOLEAN, false, false);

    /**
     * Create a new routine call instance
     */
    public PgLockStatus() {
        super("pg_lock_status", PgCatalog.PG_CATALOG);

        addOutParameter(LOCKTYPE);
        addOutParameter(DATABASE);
        addOutParameter(RELATION);
        addOutParameter(PAGE);
        addOutParameter(TUPLE);
        addOutParameter(VIRTUALXID);
        addOutParameter(TRANSACTIONID);
        addOutParameter(CLASSID);
        addOutParameter(OBJID);
        addOutParameter(OBJSUBID);
        addOutParameter(VIRTUALTRANSACTION);
        addOutParameter(PID);
        addOutParameter(MODE);
        addOutParameter(GRANTED);
        addOutParameter(FASTPATH);
    }

    /**
     * Get the <code>locktype</code> parameter OUT value from the routine
     */
    public String getLocktype() {
        return get(LOCKTYPE);
    }

    /**
     * Get the <code>database</code> parameter OUT value from the routine
     */
    public Long getDatabase() {
        return get(DATABASE);
    }

    /**
     * Get the <code>relation</code> parameter OUT value from the routine
     */
    public Long getRelation() {
        return get(RELATION);
    }

    /**
     * Get the <code>page</code> parameter OUT value from the routine
     */
    public Integer getPage() {
        return get(PAGE);
    }

    /**
     * Get the <code>tuple</code> parameter OUT value from the routine
     */
    public Short getTuple() {
        return get(TUPLE);
    }

    /**
     * Get the <code>virtualxid</code> parameter OUT value from the routine
     */
    public String getVirtualxid() {
        return get(VIRTUALXID);
    }

    /**
     * Get the <code>transactionid</code> parameter OUT value from the routine
     */
    public Long getTransactionid() {
        return get(TRANSACTIONID);
    }

    /**
     * Get the <code>classid</code> parameter OUT value from the routine
     */
    public Long getClassid() {
        return get(CLASSID);
    }

    /**
     * Get the <code>objid</code> parameter OUT value from the routine
     */
    public Long getObjid() {
        return get(OBJID);
    }

    /**
     * Get the <code>objsubid</code> parameter OUT value from the routine
     */
    public Short getObjsubid() {
        return get(OBJSUBID);
    }

    /**
     * Get the <code>virtualtransaction</code> parameter OUT value from the routine
     */
    public String getVirtualtransaction() {
        return get(VIRTUALTRANSACTION);
    }

    /**
     * Get the <code>pid</code> parameter OUT value from the routine
     */
    public Integer getPid() {
        return get(PID);
    }

    /**
     * Get the <code>mode</code> parameter OUT value from the routine
     */
    public String getMode() {
        return get(MODE);
    }

    /**
     * Get the <code>granted</code> parameter OUT value from the routine
     */
    public Boolean getGranted() {
        return get(GRANTED);
    }

    /**
     * Get the <code>fastpath</code> parameter OUT value from the routine
     */
    public Boolean getFastpath() {
        return get(FASTPATH);
    }
}
