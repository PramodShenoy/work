/*
 * This file is generated by jOOQ.
*/
package com.cf.testdb.tables;


import com.cf.testdb.Testdb;
import com.cf.testdb.tables.records.LaptopRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Laptop extends TableImpl<LaptopRecord> {

    private static final long serialVersionUID = -489135521;

    /**
     * The reference instance of <code>testdb.laptop</code>
     */
    public static final Laptop LAPTOP = new Laptop();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LaptopRecord> getRecordType() {
        return LaptopRecord.class;
    }

    /**
     * The column <code>testdb.laptop.name</code>.
     */
    public final TableField<LaptopRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>testdb.laptop.brand</code>.
     */
    public final TableField<LaptopRecord, String> BRAND = createField("brand", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>testdb.laptop.gpu</code>.
     */
    public final TableField<LaptopRecord, String> GPU = createField("gpu", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>testdb.laptop.price</code>.
     */
    public final TableField<LaptopRecord, Integer> PRICE = createField("price", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>testdb.laptop</code> table reference
     */
    public Laptop() {
        this(DSL.name("laptop"), null);
    }

    /**
     * Create an aliased <code>testdb.laptop</code> table reference
     */
    public Laptop(String alias) {
        this(DSL.name(alias), LAPTOP);
    }

    /**
     * Create an aliased <code>testdb.laptop</code> table reference
     */
    public Laptop(Name alias) {
        this(alias, LAPTOP);
    }

    private Laptop(Name alias, Table<LaptopRecord> aliased) {
        this(alias, aliased, null);
    }

    private Laptop(Name alias, Table<LaptopRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Testdb.TESTDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Laptop as(String alias) {
        return new Laptop(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Laptop as(Name alias) {
        return new Laptop(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Laptop rename(String name) {
        return new Laptop(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Laptop rename(Name name) {
        return new Laptop(name, null);
    }
}
